'''
The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?
'''
import time

start_time = time.time()
triangle_numbers_list = [1]
divisors_count_in = 1000
divisors_count = 0

div = []

while divisors_count <= divisors_count_in:
    divisors_count = 0
    div = []
    triangle_numbers_list.append(triangle_numbers_list[-1] + len(triangle_numbers_list) + 1)
    if triangle_numbers_list[-1] % 2 != 0:
        continue
    else:
        if triangle_numbers_list[-1] % 3 != 0:
            continue
        else:
            if triangle_numbers_list[-1] % 5 != 0:
                continue
            else:
                if triangle_numbers_list[-1] % 7 != 0:
                    continue
                else:
                    if triangle_numbers_list[-1] % 9 != 0:
                        continue
                    else:
                        if triangle_numbers_list[-1] % 11 != 0:
                            continue
                        else:
                            if triangle_numbers_list[-1] % 13 != 0:
                                continue


    for i in range(1, int(triangle_numbers_list[-1]+1 / 2)):
        if triangle_numbers_list[-1] % i == 0:
            divisors_count += 1
            div.append(i)

    if divisors_count >= 300:
        print(triangle_numbers_list[-1], ' has '
              , divisors_count, ' dividers - '
              , int((time.time() - start_time)), ' sec'
              , div)


print(' ------ ')
print('The first triangle number to have over %i divisors is %i' % (divisors_count_in, triangle_numbers_list[-1]))
print("--- %s seconds ---" % int((time.time() - start_time)))

